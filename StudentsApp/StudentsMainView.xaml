<Window
    x:Class="StudentsApp.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:StudentsApp.Controls"
    xmlns:converters="clr-namespace:StudentsApp.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:StudentsApp"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:user="clr-namespace:StudentsApp.ViewModels"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    Title="StudentsApp"
    Width="600"
    Height="360"
    mc:Ignorable="d">
    <Window.DataContext>
        <user:StudentsMainViewModel />
    </Window.DataContext>
    <Window.Resources>
        <ResourceDictionary>
            <converters:SelectedStudentEnableEditPanelConverter x:Key="SelectedStudentEnableEditPanelConverter" />
        </ResourceDictionary>
    </Window.Resources>
    <Grid VerticalAlignment="Stretch" Margin="0,0">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="289*" />
            <ColumnDefinition Width="302*" />
        </Grid.ColumnDefinitions>
        <StackPanel Grid.Column="1" Margin="4.6,5,4.6,0.2">
            <Button
                x:Name="readStudentBut"
                Width="237"
                Margin="30,2,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Command="{Binding ViewStudentsCommand}"
                Content="View student" />
            <Button
                x:Name="addStudentBut"
                Width="237"
                Margin="30,12,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Command="{Binding AddStudentCommand}"
                Content="Add student" />
            <Button
                x:Name="delStudentBut"
                Width="237"
                Margin="30,12,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Command="{Binding DeleteStudentCommand}"
                CommandParameter="{Binding SelectedStudent}"
                Content="Delete student" />
            <Button
                x:Name="updStudentBut"
                Width="237"
                Height="20"
                Margin="30,12,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Top"
                Command="{Binding UpdateStudentCommand}"
                CommandParameter="{Binding SelectedStudent, UpdateSourceTrigger=PropertyChanged}"
                Content="Update student" />
            <StackPanel
                Height="194"
                Margin="5,5,5.4,5"
                DataContext="{Binding SelectedStudent, Mode=TwoWay}"
                IsEnabled="{Binding SelectedItem, Converter={StaticResource ResourceKey=SelectedStudentEnableEditPanelConverter}, ElementName=StudentsListView}">
                <TextBlock Text="SELECTED STUDENT:" />
                <!--<TextBlock Text="Last Name" />
                <TextBox Text="{Binding LastName, UpdateSourceTrigger=PropertyChanged}" />
                <TextBlock Text="First Name" />
                <TextBox Text="{Binding FirstName, UpdateSourceTrigger=PropertyChanged}" />
                <TextBlock Text="Age" />
                <TextBox Text="{Binding Age, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, ValidatesOnDataErrors=True}" ToolTip="Age can take values ​​from 16 to 100" />
                <TextBlock Text="Gender (Муж/Жен)" />
                <TextBox Text="{Binding Gender, UpdateSourceTrigger=PropertyChanged}" />
                -->
                <!--<Label Foreground="Red" Content="{Binding (Validation.Errors)[0].ErrorContent}"/>-->

                <controls:EditProperty HeaderText="Last Name" Value="{Binding LastName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <controls:EditProperty
                    Margin="5,5,4.8,5"
                    HeaderText="First Name"
                    Value="{Binding FirstName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <controls:EditProperty HeaderText="Age" Value="{Binding Age, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <controls:EditProperty HeaderText="Gender" Value="{Binding Gender, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </StackPanel>
        </StackPanel>
        <ListView
            x:Name="StudentsListView"
            Width="Auto"
            Margin="0,0,0.4,0.4"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            ItemsSource="{Binding Students}"
            SelectedItem="{Binding SelectedStudent}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding Path=SelectedStudentsChangedCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ListView}, Path=SelectedItems}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <ListView.View>
                <GridView>
                    <GridViewColumn
                        Width="Auto"
                        DisplayMemberBinding="{Binding Id}"
                        Header="Id" />
                    <GridViewColumn Width="Auto" Header="Last Name/First Name">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{1} {0}">
                                            <Binding Path="FirstName" />
                                            <Binding Path="LastName" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn
                        Width="Auto"
                        DisplayMemberBinding="{Binding Age, StringFormat={}{0} (лет)}"
                        Header="Age" />
                    <GridViewColumn
                        Width="Auto"
                        DisplayMemberBinding="{Binding Gender}"
                        Header="Gender" />
                </GridView>
            </ListView.View>
        </ListView>
    </Grid>
</Window>